---
swagger: "2.0"
info:
  description: |
    Welcome to TimeManager's API doc
    :(http://localhost:4000/api)
  version: 1.0.0
  title: TimeManager
  termsOfService: None
  contact:
    email: the4musketeers@epitech.eu
  license:
    name: PostgreSQL
    url: https://www.postgresql.org/about/licence/
host: virtserver.swaggerhub.com
basePath: /Epitech2023/api/1.0.0
tags:
- name: Users
  description: Everything about your users
- name: Clocks
  description: Access to your clocks status
- name: Workingtime
  description: Everything about your Workingtime
- name: Team
  description: Everything about your teams !
schemes:
- https
- http
paths:
  /security/:
    post:
      tags:
      - user
      summary: Add a new user
      operationId: createUser
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: user's entries
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        "400":
          description: Invalid input
        "502":
          description: Security error
        "201":
          description: Created
    put:
      tags:
      - user
      summary: Update an existing user
      operationId: updateUser
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: updating user's profile
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        "400":
          description: Invalid input
        "502":
          description: Security error
        "201":
          description: Updated
  /security/{userId}/:
    get:
      tags:
      - user
      summary: Pull an an existing user
      operationId: getUser
      consumes:
      - application/Json
      produces:
      - application/Json
      parameters:
      - name: userId
        in: path
        description: User id to pull the wanted user
        required: true
        type: integer
        format: int64
      responses:
        "502":
          description: Security error
        "201":
          description: Successful operation
    delete:
      tags:
      - user
      summary: Delete an existing user
      operationId: deleteUser
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: userId
        in: path
        description: User id to delete the matching user
        required: true
        type: integer
        format: int64
      responses:
        "400":
          description: Invalid input
        "502":
          description: Security error
        "201":
          description: Deleted
  /security/_list/:
    get:
      tags:
      - user
      summary: Pull a list of existing users
      operationId: listUsers
      consumes:
      - application/Json
      produces:
      - application/Json
      parameters: []
      responses:
        "502":
          description: Security error
        "201":
          description: Successful operation
  /clock/{userId}/:
    get:
      tags:
      - clock
      summary: Finds clock by user id
      operationId: getClock
      consumes:
      - application/Json
      produces:
      - application/json
      parameters:
      - name: userId
        in: path
        description: user id needed to pull the requested clock
        required: true
        type: integer
      responses:
        "201":
          description: successful operation
        "504":
          description: API error
        "502":
          description: security error
    post:
      tags:
      - clock
      summary: Create or update a given clock
      operationId: createOrUpdate
      consumes:
      - application/Json
      produces:
      - application/json
      parameters:
      - name: userId
        in: path
        description: body
        required: true
        type: integer
      - in: body
        name: start
        description: body
        required: true
        schema:
          $ref: '#/definitions/Clock'
      responses:
        "201":
          description: successful operation
        "504":
          description: API error
        "502":
          description: security error
    delete:
      tags:
      - clock
      summary: Delete a clock linked by the requested user id
      operationId: delete
      consumes:
      - application/Json
      produces:
      - application/json
      parameters:
      - name: userId
        in: path
        description: user id needed to delete the requested clock
        required: true
        type: integer
      responses:
        "201":
          description: successful operation
        "504":
          description: API error
        "502":
          description: security error
  /security/{userId}/_password/:
    put:
      tags:
      - user
      summary: Change the password for a given user
      operationId: updateUserPassword
      consumes:
      - application/Json
      produces:
      - application/json
      parameters:
      - name: userId
        in: path
        description: user id
        required: true
        type: integer
      - in: body
        name: body
        description: update password body
        required: false
        schema:
          $ref: '#/definitions/UpdateUserPassword'
      responses:
        "201":
          description: successful operation
        "504":
          description: API error
        "502":
          description: security error
  /security/_roles/:
    get:
      tags:
      - user
      summary: List all roles
      operationId: listRoles
      consumes:
      - application/Json
      produces:
      - application/json
      parameters: []
      responses:
        "201":
          description: successful operation
        "504":
          description: API error
        "502":
          description: security error
  /clock/_me/:
    get:
      tags:
      - clock
      summary: get the clock of the current user
      operationId: getMyClock
      consumes:
      - application/Json
      produces:
      - application/json
      parameters: []
      responses:
        "201":
          description: successful operation
        "504":
          description: API error
        "502":
          description: security error
    post:
      tags:
      - clock
      summary: create or update the clock of a given user
      operationId: createOrUpdateMyClock
      consumes:
      - application/Json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Clock'
      responses:
        "201":
          description: successful operation
        "504":
          description: API error
        "502":
          description: security error
    delete:
      tags:
      - clock
      summary: Delete the clock of the current user
      operationId: deleteMyClock
      consumes:
      - application/Json
      produces:
      - application/json
      parameters: []
      responses:
        "201":
          description: successful operation
        "502":
          description: security error
  /workingtime/{userId}/_list/:
    get:
      tags:
      - workingtime
      summary: get all the working times of a given user
      operationId: listWorkingTimes
      consumes:
      - application/Json
      produces:
      - application/json
      parameters:
      - name: userId
        in: path
        description: user id linked to the list of working times
        required: true
        type: integer
      responses:
        "201":
          description: successful operation
        "504":
          description: API error
        "502":
          description: security error
  /workingtime/_me/_list/:
    get:
      tags:
      - workingtime
      summary: get all the working times of the current user
      operationId: listMyWorkingTimes
      consumes:
      - application/Json
      produces:
      - application/json
      parameters: []
      responses:
        "201":
          description: successful operation
        "504":
          description: API error
        "502":
          description: security error
  /workingtime/{userId}/{workId}/:
    get:
      tags:
      - workingtime
      summary: retrieves the working time linked to a given user
      operationId: getWorkingTime
      consumes:
      - application/Json
      produces:
      - application/json
      parameters:
      - name: userId
        in: path
        description: user id
        required: true
        type: integer
      - name: workId
        in: path
        description: work id
        required: true
        type: integer
      responses:
        "201":
          description: successful operation
        "504":
          description: API error
        "502":
          description: security error
    put:
      tags:
      - workingtime
      summary: update the working time linked to a given user
      operationId: updateWorkingTime
      consumes:
      - application/Json
      produces:
      - application/json
      parameters:
      - name: userId
        in: path
        description: user id
        required: true
        type: integer
      - name: workId
        in: path
        description: work id
        required: true
        type: integer
      - in: body
        name: body
        description: start of the working time
        required: false
        schema:
          $ref: '#/definitions/WorkingTime'
      responses:
        "201":
          description: successful operation
        "504":
          description: API error
        "502":
          description: security error
    delete:
      tags:
      - workingtime
      summary: delete the working time linked to a given user
      operationId: deleteWorkingTime
      consumes:
      - application/Json
      produces:
      - application/json
      parameters:
      - name: userId
        in: path
        description: user id
        required: true
        type: integer
      - name: workId
        in: path
        description: work id
        required: true
        type: integer
      - in: body
        name: body
        description: workingTime body
        required: false
        schema:
          $ref: '#/definitions/WorkingTime'
      responses:
        "201":
          description: successful operation
        "504":
          description: API error
        "502":
          description: security error
  /workingtime/_me/{workId}/:
    get:
      tags:
      - workingtime
      summary: retrieves the working time linked to the current user
      operationId: getMyWorkingTime
      consumes:
      - application/Json
      produces:
      - application/json
      parameters:
      - name: workId
        in: path
        description: work id
        required: true
        type: integer
      responses:
        "200":
          description: successful operation
        "504":
          description: API error
        "502":
          description: security error
    put:
      tags:
      - workingtime
      summary: update the working time linked to the current user
      operationId: updateMyWorkingTime
      consumes:
      - application/Json
      produces:
      - application/json
      parameters:
      - name: workId
        in: path
        description: work id
        required: true
        type: integer
      - in: body
        name: body
        description: working time body
        required: false
        schema:
          $ref: '#/definitions/WorkingTime'
      responses:
        "201":
          description: successful operation
        "504":
          description: API error
        "502":
          description: security error
    delete:
      tags:
      - workingtime
      summary: delete the working time linked to the current user
      operationId: deleteMyWorkingTime
      consumes:
      - application/Json
      produces:
      - application/json
      parameters:
      - name: workId
        in: path
        description: work id
        required: true
        type: integer
      responses:
        "201":
          description: successful operation
        "504":
          description: API error
        "502":
          description: security error
  /workingtime/{userId}/:
    post:
      tags:
      - workingtime
      summary: create the working time linked to the given user
      operationId: createWorkingTime
      consumes:
      - application/Json
      produces:
      - application/json
      parameters:
      - name: userId
        in: path
        description: user id
        required: true
        type: integer
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/WorkingTime'
      responses:
        "201":
          description: successful operation
        "504":
          description: API error
        "502":
          description: security error
  /workingtime/_me/:
    post:
      tags:
      - workingtime
      summary: create the working time linked to the given user
      operationId: createMyWorkingTime
      consumes:
      - application/Json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/WorkingTime'
      responses:
        "201":
          description: successful operation
        "504":
          description: API error
        "502":
          description: security error
  /auth/_login/:
    post:
      tags:
      - authentification
      summary: create a token for a given user
      operationId: login
      consumes:
      - application/Json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Login'
      responses:
        "201":
          description: successful operation
        "504":
          description: API error
        "502":
          description: security error
  /auth/_logout/:
    get:
      tags:
      - authentification
      summary: delete a token linked to a given user
      operationId: logout
      consumes:
      - application/Json
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: successful operation
        "504":
          description: API error
        "502":
          description: security error
  /auth/_register/:
    post:
      tags:
      - authentification
      summary: register a new user with the given parameters
      operationId: register
      consumes:
      - application/Json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Register'
      responses:
        "201":
          description: successful operation
        "504":
          description: API error
        "502":
          description: security error
  /auth/_checkToken/:
    post:
      tags:
      - authentification
      summary: check a token with the given parameters
      operationId: checkToken
      consumes:
      - application/Json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/CheckToken'
      responses:
        "201":
          description: successful operation
        "504":
          description: API error
        "502":
          description: security error
  /auth/_me/:
    get:
      tags:
      - authentification
      summary: Gets the current user informations
      operationId: getMyUser
      consumes:
      - application/Json
      produces:
      - application/json
      parameters: []
      responses:
        "201":
          description: successful operation
        "504":
          description: API error
        "502":
          description: security error
  /auth/:
    put:
      tags:
      - authentification
      summary: Update the current user informations
      operationId: updateMyUser
      consumes:
      - application/Json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/UpdateMyUser'
      responses:
        "201":
          description: successful operation
        "504":
          description: API error
        "502":
          description: security error
    delete:
      tags:
      - authentification
      summary: Delete the current user's account
      operationId: deleteMyUser
      consumes:
      - application/Json
      produces:
      - application/json
      parameters: []
      responses:
        "201":
          description: successful operation
        "504":
          description: API error
        "502":
          description: security error
  /auth/_password/:
    put:
      tags:
      - authentification
      summary: Change the current user password
      operationId: updateMyPassword
      consumes:
      - application/Json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: updateMyPassword body
        required: false
        schema:
          $ref: '#/definitions/UpdateMyPassword'
      responses:
        "201":
          description: successful operation
        "504":
          description: API error
        "502":
          description: security error
  /team/:
    post:
      tags:
      - team
      summary: create a team
      operationId: createTeam
      consumes:
      - application/Json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/CreateTeam'
      responses:
        "201":
          description: successful operation
        "504":
          description: API error
        "502":
          description: security error
  /team/_list/:
    get:
      tags:
      - team
      summary: Gets the list of all teams
      operationId: listTeams
      consumes:
      - application/Json
      produces:
      - application/json
      parameters: []
      responses:
        "201":
          description: successful operation
        "504":
          description: API error
        "502":
          description: security error
  /team/{userId}/_list/:
    get:
      tags:
      - team
      summary: Gets the list of the teams linked to a user
      operationId: listUserTeams
      consumes:
      - application/Json
      produces:
      - application/json
      parameters:
      - name: userId
        in: path
        description: team name
        required: true
        type: integer
      responses:
        "201":
          description: successful operation
        "504":
          description: API error
        "502":
          description: security error
  /team/{teamName}/:
    get:
      tags:
      - team
      summary: Retrieves a team from its name
      operationId: getTeamByName
      consumes:
      - application/Json
      produces:
      - application/json
      parameters:
      - name: teamName
        in: path
        description: team name
        required: true
        type: string
      responses:
        "201":
          description: successful operation
        "504":
          description: API error
        "502":
          description: security error
    delete:
      tags:
      - team
      summary: Delete a team with a given name
      operationId: deleteTeam
      consumes:
      - application/Json
      produces:
      - application/json
      parameters:
      - name: teamName
        in: path
        description: team name
        required: true
        type: string
      responses:
        "201":
          description: successful operation
        "504":
          description: API error
        "502":
          description: security error
  /team/{teamName}/{userId}/:
    put:
      tags:
      - team
      summary: Add a user to a given team
      operationId: addTeamUser
      consumes:
      - application/Json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: add team user body
        required: false
        schema:
          $ref: '#/definitions/AddTeamUser'
      - name: teamName
        in: path
        description: team name
        required: true
        type: string
      - name: userId
        in: path
        description: team name
        required: true
        type: integer
      responses:
        "201":
          description: successful operation
        "504":
          description: API error
        "502":
          description: security error
    delete:
      tags:
      - team
      summary: Delete a user from a given team
      operationId: removeTeamUser
      consumes:
      - application/Json
      produces:
      - application/json
      parameters:
      - name: teamName
        in: path
        description: team name
        required: true
        type: string
      - name: userId
        in: path
        description: team name
        required: true
        type: integer
      responses:
        "201":
          description: successful operation
        "504":
          description: API error
        "502":
          description: security error
  /team/_me/:
    post:
      tags:
      - team
      summary: Create a new team for owned by the requesting user
      operationId: createOwnedTeam
      consumes:
      - application/Json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/CreateOwnedTeam'
      responses:
        "201":
          description: successful operation
        "504":
          description: API error
        "502":
          description: security error
  /team/_me/{teamName}/:
    get:
      tags:
      - team
      summary: retrieves the team owner
      operationId: listOwnedTeamByName
      consumes:
      - application/Json
      produces:
      - application/json
      parameters:
      - name: teamName
        in: path
        description: team name
        required: true
        type: string
      responses:
        "201":
          description: successful operation
        "504":
          description: API error
        "502":
          description: security error
    delete:
      tags:
      - team
      summary: delete a team for owned by the requesting user
      operationId: deleteOwnedTeam
      consumes:
      - application/Json
      produces:
      - application/json
      parameters:
      - name: teamName
        in: path
        description: team name
        required: true
        type: string
      responses:
        "201":
          description: successful operation
        "504":
          description: API error
        "502":
          description: security error
  /team/_me/_list/:
    get:
      tags:
      - team
      summary: get a teams list owned by the current user
      operationId: listOwnedTeams
      consumes:
      - application/Json
      produces:
      - application/json
      parameters: []
      responses:
        "201":
          description: successful operation
        "504":
          description: API error
        "502":
          description: security error
  /team/_me/{teamName}/{userId}/:
    put:
      tags:
      - team
      summary: Add a user to the owned team
      operationId: AddOwnTeamUser
      consumes:
      - application/Json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: add team user body
        required: false
        schema:
          $ref: '#/definitions/AddOwnedTeamUser'
      - name: teamName
        in: path
        description: team name
        required: true
        type: string
      - name: userId
        in: path
        description: team name
        required: true
        type: integer
      responses:
        "201":
          description: successful operation
        "504":
          description: API error
        "502":
          description: security error
    delete:
      tags:
      - team
      summary: delete a user from an owned team
      operationId: removeOwnedTeamUser
      consumes:
      - application/Json
      produces:
      - application/json
      parameters:
      - name: teamName
        in: path
        description: team name
        required: true
        type: string
      - name: userId
        in: path
        description: team name
        required: true
        type: integer
      responses:
        "201":
          description: successful operation
        "504":
          description: API error
        "502":
          description: security error
definitions:
  User:
    type: object
    required:
    - email
    - id
    - password
    - username
    properties:
      id:
        type: integer
        format: int64
      username:
        type: string
        example: Alexis
      email:
        type: string
        example: alexis@gmail.com
      password:
        type: string
      role:
        type: string
        example: admin
  Clock:
    type: object
    required:
    - start
    - userId
    properties:
      id:
        type: integer
        format: int64
        example: 2
      userId:
        type: integer
        format: int64
        example: 789
      start:
        type: string
      end:
        type: string
      status:
        type: boolean
  WorkingTime:
    type: object
    required:
    - end
    - start
    properties:
      id:
        type: integer
        format: int64
      userId:
        type: integer
        example: int64
      start:
        type: string
      end:
        type: string
      description:
        type: string
  UpdateUserPassword:
    type: object
    required:
    - id
    - password
    properties:
      id:
        type: integer
        format: int64
      password:
        type: string
  Login:
    type: object
    required:
    - expiresIn
    - password
    - username
    properties:
      username:
        type: string
      password:
        type: string
      expiresIn:
        type: string
  Register:
    type: object
    properties:
      username:
        type: string
      email:
        type: string
      password:
        type: string
  CheckToken:
    type: object
    required:
    - jwt
    properties:
      jwt:
        type: string
  UpdateMyUser:
    type: object
    required:
    - mail
    - role
    - username
    properties:
      username:
        type: string
      mail:
        type: string
      role:
        type: string
  UpdateMyPassword:
    type: object
    required:
    - id
    - password
    properties:
      id:
        type: integer
      password:
        type: string
  CreateTeam:
    type: object
    required:
    - name
    properties:
      owner_id:
        type: integer
        format: int64
      name:
        type: string
        example: Les gueux du stade
  AddTeamUser:
    type: object
    required:
    - name
    - owner_id
    properties:
      owner_id:
        type: integer
        format: int64
      name:
        type: string
        example: Les gueux du stade
      members_id:
        type: integer
        example: 34820
  CreateOwnedTeam:
    type: object
    required:
    - name
    - owner_id
    properties:
      owner_id:
        type: integer
        format: int64
      name:
        type: string
        example: Les gueux du stade
  AddOwnedTeamUser:
    type: object
    required:
    - name
    - owner_id
    properties:
      owner_id:
        type: integer
        format: int64
      name:
        type: string
        example: Les gueux du stade
      members_id:
        type: integer
        example: 34820
  ApiResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      message:
        type: string
  Team:
    type: object
    properties:
      id:
        type: integer
        format: int64
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
